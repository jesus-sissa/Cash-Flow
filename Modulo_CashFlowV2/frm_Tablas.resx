<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iml_Sincronia.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="iml_Sincronia.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABQ
        BwAAAk1TRnQBSQFMAgEBAgEAAaABAAGgAQABGAEAARgBAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEQBgABEv8A/wBkAAHcAXMBjQE2Af8Bf7gAAdwBcwFnASIBTAE3AWoBLgH/AX+0AAHc
        AXMBZgEeAa4BPwHyAU8BiwE3AWoBKgH/AX+wAAG8AXMBRgEeAYoBMwHsATsB7AE7Ae4BQwFpASsBaQEq
        Af8Bf6wAAbwBcwEmARoBaQErAckBLwHMATsBzQE/AeoBMwHsATsBaAEnAUgBJgH/AX+oAAG8AXMBJQEa
        AUcBIwGIASsBrQE7AbABSwGwAUcBrQE/AakBLwHKATMBaAEnAUgBJgH/AX8UAAH/AX8B3gF7Ad4BewHe
        AXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHe
        AXsB/wF/aAABvAFzAScBIgHkARoBSAErAZABRwGRAUsBsQFLAdgBZwGvAUcBjAE7AYgBKwGpAS8BJwEj
        AQgBIgH/AX8QAAH/AX8BuAFKARgBGgEYARoBGAEaARgBGgEYARoBGAEaATgBGgE4ARoBOAEaATgBGgE4
        ARoBOAEaARgBGgEYARoBGAEaARgBGgEYARoBGAEaAbgBSgH/AX9kAAG8AXMBbAEyAcUBGgEqATMBcgFP
        AZIBTwGRAUsB2wFvAWgBIgHYAWcBjwFDAWsBNwFnAScBiAErAcYBHgEHASIB/wF/DgAB/wF/AXcBOgE/
        AQIBPwECAT8BAgFfAQIBXwECAV8BAgFfAQIBfwECAX8BAgF/AQIBfwECAV8BAgFfAQIBXwECAV8BAgE/
        AQIBPwECAT8BAgF3AToB/wF/YgAB/gF7AWsBLgHqAi4BPwF0AVcBcgFPAXIBTwHbAXMBZwEiAd0BdwFp
        ASYBtwFjAW4BQwFKATMBJQEfAWYBIwGlARoB5wEdAf8BfwwAAf8BfwF3AToBPwECAV8BAgFfAQIBXwEC
        AX8BAgF/AQIBnwECAZ8BAgGfAQIBnwECAZ8BAgGfAQIBfwECAX8BAgFfAQIBXwECAV8BAgE/AQIBdwE6
        Af8Bf2IAAf8BfwHQAUYBdAFXAXcBXwF0AVMBdAFXAdwBcwGoASYB3gF7AgAB3QF7AUUBGgG3AWMBTgE/
        ASkBLwEEARsBJQEfAWQBFgHHAR0B/wF/CgAB/wF/AXcBOgE/AQIBXwECAV8BAgF/AQIBfwECAX8BAgGf
        AQIBnwECAZ8BAgGfAQIBnwECAZ8BAgF/AQIBfwECAX8BAgFfAQIBXwECAT8BAgF3AToB/wF/ZAAB/wF/
        Ac8BPgGXAV8BeAFjAdwBcwGIASIB3gF7BgAB3QF3AUUBGgG3AV8BLQE7AQgBKwHCARIBAwEXAWMBFgGn
        AR0B/wF/CAAB/wF/AXcBOgE/AQIBPwECAV8BAgFfAQIBXwECAV8BAgF/AQIBfwECAX8BAgF/AQIBfwEC
        AX8BAgFfAQIBXwECAV8BAgFfAQIBPwECAT8BAgF3AToB/wF/ZgAB/wF/Ac0BOgG5AWcBiQEqAd4BewoA
        Ad0BdwEkARYBlgFfASwBOwHnASYBoQEOAcIBEgFCARIBxwEhAf8BfwYAAf8BfwG4AUYBGQEaARkBGgEZ
        ARoBGQEaARkBGgEZARoBGQEaARkBGgEZARoBGQEaARkBGgEZARoBGQEaARkBGgEZARoBGQEaARkBGgEZ
        ARoBuAFKAf8Bf2gAAf8BfwETAU8B3QF3DgAB3QF3AQQBFgF3AV8B7AE2AacBIgFgAQYBgAEKASIBDgHp
        ASkB/wF/BgAB/wF/Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7
        Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Af8Bf4AAAd0BdwEEARYBdwFfAc0BNgFnASIBAAEGASABBgFn
        ASIBCwEuAf8Bf64AAd0BdwEFARYBVwFfAa0BOgFHASIBwAEFAfABRgEKASoB/wF/sAAB3QF3AQUBGgFX
        AV8BrQE6AVYBWwEpASoB/wF/tAAB3QF3AQUBGgF4AWcBrgE6Af8Bf7gAAd0BdwGuAToB/wF//wD/ANgA
        AUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD/wEABv8GAAb/BgAG/wYAAf8BHwT/
        BgAB/gEPBP8GAAH8AQcE/wYAAfgBAwT/BgAB8AEBBP8GAAHgAQAB/wHAAQABAwYAAcABAAF/AYABAAEB
        BgABgAEAAT8BgAEAAQEIAAEfAYABAAEBBwABQAEPAYABAAEBBgABgAHgAQcBgAEAAQEGAAHBAfABAwGA
        AQABAQYAAeMB+AEBAcABAAEDBgAB/wH8AQAD/wYAAf8B/gEAA/8GAAL/AQED/wYAAv8BgwP/BgAC/wHH
        A/8GAAb/BgAG/wYABv8GAAs=
</value>
  </data>
</root>